{erl_opts, [debug_info]}.

{deps, [
    {lfe, "~> 2.1"}
]}.

{plugins, [
    {rebar3_lfe, "~> 0.4"},
    {rebar3_oscmd, "~> 0.5"}
]}.

{provider_hooks, [
    {pre, [
        {compile, {lfe, compile}}
    ]}
]}.

{xref_checks,[
    undefined_function_calls,undefined_functions,locals_not_used,
    deprecated_function_calls,deprecated_functions
]}.

{commands, [
    {nifdl, "echo 'Downloading Sonic Pi MIDI NIF source ...' && git clone https://github.com/sonic-pi-net/sp_midi.git", [{timeout, 120000}, {verbose, true}]},
    {nifdir, "mkdir -p sp_midi/build", [{timeout, 120000}, {verbose, true}]},
    {nifprep, "cd sp_midi/build && cmake ..", [{timeout, 120000}, {verbose, true}]},
    {nifbuild, "echo 'Building Sonic Pi MIDI NIF ...' && cd sp_midi/build && make", [{timeout, 120000}, {verbose, true}]},
    {nifcp, "echo 'Copying NIF library to project src dir ...' && cp sp_midi/build/libsp_midi.dylib src", [{timeout, 120000}, {verbose, true}]},
    {nifclean, "echo 'Removing Sonic Pi MIDI NIF source...' && rm -rf sp_midi", [{timeout, 120000}, {verbose, true}]}
]}.

{profiles, [
    {test, [
        {deps, [
            {proper, "1.4.0"},
            {ltest, "~> 0.13"}
        ]},
        {plugins, [
            {rebar3_proper, "0.12.1"}
        ]},
        {eunit_opts, [verbose]},
        {erl_opts, [{src_dirs, ["src", "test"]}]}
    ]}
]}.

{alias, [
    {coverage, [
        {proper, "-c"},
        {cover, "-v --min_coverage=0"}
    ]},
    {nif, [
	{oscmd, "nifdl"},
       	{oscmd, "nifdir"},
	{oscmd, "nifprep"},
	{oscmd, "nifbuild"},
	{oscmd, "nifcp"},
	{oscmd, "nifclean"}
    ]},
    {check, [
        compile,
        %%xref,
        %%dialyzer,
        eunit,
        coverage
    ]}
]}.
